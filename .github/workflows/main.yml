name: Node.js CI

on:
 push:
   branches: ['main', 'Prod']  # Trigger on both staging and production branches

jobs:
 staging-deploy:
   if: github.ref == 'refs/heads/main'
   runs-on: ubuntu-latest

   steps:
     - name: Checkout code
       uses: actions/checkout@v2

     - name: Deploy to Staging Server
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.SSH_HOST }}
         username: ${{ secrets.SSH_USERNAME }}
         key: ${{ secrets.SSH_KEY }}
         port: ${{ secrets.SSH_PORT }}
         command_timeout: 200m
         script: |
           cd /usr/staging_app/checkref-backend-repo
           git pull origin main
           docker build -t checkref-backend:latest .
           docker rm -f checkref-backend || true
           docker run --name checkref-backend --env-file ./env/development.env -d -p 8088:8088 checkref-backend:latest

 prod-deploy:
   if: github.ref == 'refs/heads/Prod'
   runs-on: ubuntu-latest

   steps:
     - name: Checkout code
       uses: actions/checkout@v2

     - name: Deploy to Production Server
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.PROD_SSH_HOST }}
         username: ${{ secrets.PROD_SSH_USERNAME }}
         key: ${{ secrets.PROD_SSH_KEY }}
         port: ${{ secrets.PROD_SSH_PORT }}
         command_timeout: 200m
         script: |
           cd /usr/Prod_app/checkref-backend-repo
           git pull origin Prod
           docker build -t checkref-backend:latest .
           docker rm -f checkref-backend || true
           docker run --name checkref-backend --env-file ./env/production.env -d -p 8088:8088 checkref-backend:latest

# This workflow will deploy to the staging server when code is pushed to the main branch
# and to the production server when code is pushed to the Prod branch.  
