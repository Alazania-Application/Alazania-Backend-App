services:
  seq:
    image: datalust/seq:latest
    ports:
      - "5341:80"     # Web UI
      - "5342:5342"   # Ingestion API
    environment:
      - ACCEPT_EULA=Y
      - SEQ_PASSWORD=${LOGGER_PW}
      - SEQ_FIRSTRUN_ADMINPASSWORD=${LOGGER_PW}
    volumes:
      - seq-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 90s

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - ./src/config/.env
    environment:
      - DB_URI=bolt://neo4j:7687
    depends_on:
      neo4j:
        condition: service_started
      seq:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./src
          target: ./src
          ignore:
            - node_modules/
        - action: rebuild
          path: yarn.lock
        - action: rebuild
          path: ./src/config/.env

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - "7474:7474"   # HTTP Browser
      - "7687:7687"   # Bolt Protocol
    environment:
      - NEO4J_AUTH=${DB_USERNAME}/${DB_PASSWORD}
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_apoc_ttl_enabled=true
      - NEO4J_apoc_ttl_schedule=60
      - NEO4J_apoc_ttl_limit=5000
      - NEO4J_PLUGINS=apoc,apoc-extended
    volumes:
      - db:/data
      - neo4j_plugins:/plugins
    restart: unless-stopped

volumes:
  db:
  neo4j_plugins:
  seq-data:
